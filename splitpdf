#!/bin/bash
# This script splits one or more PDF files into their constituent pages,
# one file per page.

# Returns number of pages in a PDF file
function numpages {
    filename="$1"
    gs -q -dNOSAFER -dNODISPLAY -c "($filename) (r) file runpdfbegin pdfpagecount = quit"
}

# Returns the number of digits in an integer
function ndigits {
    num="$1"
    echo "$num" | awk '{print(int(log($0)/log(10))+1);}'
}

# Pads number according to the number of 0's needed.
function padnum {
    n=$1
    maxn=$2
    ndigits=$(ndigits $n)
    maxndigits=$(ndigits $maxn)
    for((i=1;i<=(maxndigits-ndigits);i=i+1)); do
        printf 0
    done
    echo $n
}

# Main loop for each PDF file
function main {
	local infile="$1"
	if [[ ! -f "$infile" ]] ; then
	    echo "Error: file $infile does not exist"
	    return 1
	fi

	local firstpage=1
	local lastpage=$(numpages "$infile")
	# Check if PDF has only one page
	if [ "$lastpage" -eq 1 ]; then
	    echo "File $infile contains only one page"
	    return 0
	fi
	local base="${infile##*/}"
	local base="${base%.[Pp][Dd][Ff]}"
	local dir="$(dirname "$infile")"
	local ext="${infile##*.}"

	for((i=$firstpage;i<=lastpage;i=i+1)); do
	    printf "File $infile: Extracting Page $i"'\r';

	    gs -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER \
	       -dFirstPage=$i \
	       -dLastPage=$i \
	       -sOutputFile="${dir}/${base}_page$(padnum $i $lastpage).${ext}" \
	       "$infile" &> /dev/null
	    if [[ $? -ne 0 ]] ; then
		echo "File $infile: Error extracting page $i"
	    fi
	done
	# Clear line command
	printf '\033[K\n'
	echo "File $infile: done"
}

# Check for help
for arg in "$@"; do
	case "$arg" in
		-h|--help)
			echo "Usage: splitpdf <infile.pdf>..."
			echo ""
			echo "Splits original file into single page files named"
			echo "as <infile_page#.pdf> where # is the page number."
			exit 0
			;;
	esac
done

# Call main function for all passed filenames
for file in "$@"; do
        main "$file"
done

